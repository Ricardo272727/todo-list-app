{"version":3,"sources":["store/actions.js","store/index.js","components/Form/Form.jsx","config/endpoints.js","lib/date.js","store/actions/task.js","store/actions/user.js","lib/validate.js","hooks/useForm.js","screens/Login/Login.jsx","hooks/useTask.js","components/Alert/Alert.jsx","components/Task/Task.jsx","screens/Home/Home.jsx","screens/Register/Register.jsx","screens/Profile/Profile.jsx","components/UserInfo/UserInfo.jsx","components/Navbar/Navbar.jsx","components/PublicRoute.jsx","components/PrivateRoute.jsx","App.js","index.js"],"names":["ACTIONS","setMainContent","mainContent","type","initialState","appName","tasks","user","users","id","name","asidePanel","loginErrors","registerErrors","modifyUserErrors","globalError","store","createStore","state","action","map","t","_id","taskId","assignedTo","userId","text","filter","task","errors","error","applyMiddleware","thunk","Form","props","onSubmit","className","children","endpoints","getDateNow","now","Date","String","getDate","padStart","getMonth","getFullYear","console","log","getTasks","dispatch","fetch","method","credentials","then","res","json","data","catch","err","modifyTask","success","failed","body","headers","JSON","stringify","ok","editTask","assignTask","addTask","deleteTask","setUser","setLoginErrors","setRegisterErrors","getUsers","isEmail","email","test","isEmpty","value","length","getFieldValue","target","checked","useForm","initialValues","validateFunc","useState","fields","setFields","setErrors","cleanError","addError","handleChange","e","execValidateFunc","valid","validator","message","getInput","validate","onChange","getCheckbox","keys","Object","i","itemEmail","localStorage","getItem","password","Login","useDispatch","useSelector","form","remember","setRemember","Container","Row","Col","xs","md","size","offset","preventDefault","login","FormGroup","Label","htmlFor","Input","FormText","setItem","removeItem","to","useTask","setText","dropdownOpen","setOpen","editable","setEditable","deleting","setDeleting","toggleDeleting","textareaRef","useRef","addToast","useToasts","showConnectionError","appearance","useEffect","current","focus","edit","save","autoDismiss","toggleDropdown","assignTo","deleteFunc","removeTask","Alert","show","onClick","onCancel","onAccept","Task","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","u","key","DropdownItem","divider","onBlur","ref","Home","allTasks","setTasks","fluid","passwordConfirm","Register","register","Profile","disabled","setDisabled","src","photo","alt","getState","Promise","resolve","updateUser","UserInfo","open","Navbar","location","useLocation","history","useHistory","showAll","showAssignments","newTask","date","createTask","verifyLocation","path","callback","pathname","push","PublicRoute","rest","render","PrivateRoute","App","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.174eb699.chunk.js","sourcesContent":["\nexport const ACTIONS = {\n  SET_TASKS: 'SET_TASKS',\n  SET_USER: 'SET_USER',\n  SET_USERS: 'SET_USERS',\n  SET_ASIDE_PANEL: 'SET_ASIDE_PANEL',\n  SET_MAIN_CONTENT: 'SET_MAIN_CONTENT',\n  ADD_TASK: 'ADD_TASK',\n  ASSIGN_TASK: 'ASSIGN TASK',\n  EDIT_TASK: 'EDIT_TASK',\n  DELETE_TASK: 'DELETE_TASK',\n  SET_LOGIN_ERRORS: 'SET_LOGIN_ERRORS',\n  SET_REGISTER_ERRORS: 'SET_REGISTER_ERRORS',\n  SET_GLOBAL_ERROR: 'SET_GLOBAL_ERROR'\n};\n\nexport const setAsidePanel = (asidePanel) => {\n  return {\n    type: ACTIONS.SET_ASIDE_PANEL,\n    asidePanel\n  }\n};\n\nexport const setMainContent = (mainContent) => {\n  return {\n    type: ACTIONS.SET_MAIN_CONTENT,\n    mainContent\n  }\n};\n\nexport const setGlobalError = (error) => {\n  return {\n    type: ACTIONS.SET_GLOBAL_ERROR,\n    error\n  };\n};\n\n\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ACTIONS } from './actions.js';\n\nconst tasks = [\n  { id: 0, assignedTo: 1, text: \"Terminar to do list app\", date: '12/12/2020' },\n  { id: 1, assignedTo: 3, text: \"Terminar video chat app\", date: '12/12/2020' },\n  { id: 2, assignedTo: 2, text: \"Terminar landing page\", date: '12/12/2020' },\n  { id: 3, assignedTo: 0, text: \"Terminar js navigator IDE\", date: '12/12/2020' }\n];\n\nconst user = {\n  id: 0,\n  name: \"Ricardo Cuanalo\",\n  email: \"cuanaloricardo@gmail.com\",\n  password: \"this is my password\",\n  photo: \"https://firebasestorage.googleapis.com/v0/b/ricardo272727-github-io.appspot.com/o/images%2Favatar.png?alt=media&token=a6d55898-f7ed-42d5-ae8f-5828dec464a0\"\n};\n\nconst users = [\n  { id: 1, name: 'Britanny idelfonsa' },\n  { id: 2, name: 'Atenea' },\n  { id: 3, name: 'Puppy' },\n  { id: 0, name: \"Ricardo Cuanalo\" }\n];\n\nconst initialState = {\n  appName: 'Todo list app',\n  tasks: [],\n  user: null,\n  users: users,\n  asidePanel: null, // 'config' || 'profile'\n  mainContent: 'all', // 'assignments',\n  loginErrors: {},\n  registerErrors: {},\n  modifyUserErrors: {},\n  globalError: null\n};\n\n\n\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type){\n    case ACTIONS.SET_TASKS:\n      return {\n        ...state,\n        tasks: action.tasks\n      }\n    case ACTIONS.SET_USER:\n      return {\n        ...state,\n        user: action.user\n      }\n    case ACTIONS.SET_USERS:\n      return {\n        ...state,\n        users: action.users\n      }\n    case ACTIONS.SET_ASIDE_PANEL:\n      return {\n        ...state,\n        asidePanel: action.asidePanel\n      }\n    case ACTIONS.SET_MAIN_CONTENT:\n      return {\n        ...state,\n        mainContent: action.mainContent\n      }\n    case ACTIONS.ASSIGN_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.map(t => {\n          if(t._id === action.taskId)\n            t.assignedTo = action.userId;\n          return t;\n        })\n      }\n    case ACTIONS.EDIT_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.map(t => {\n          if(t._id === action.taskId)\n            t.text = action.text;\n          return t;\n        })\n      }\n    case ACTIONS.DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter(t => t._id !== action.taskId) \n      }\n    case ACTIONS.ADD_TASK:\n      return {\n        ...state,\n        tasks: [action.task, ...state.tasks]\n      }\n    case ACTIONS.SET_LOGIN_ERRORS:\n      return {\n        ...state,\n        loginErrors: action.errors\n      }\n    case ACTIONS.SET_REGISTER_ERRORS:\n      return {\n        ...state,\n        registerErrors: action.errors\n      }\n    case ACTIONS.SET_GLOBAL_ERROR:\n      return {\n        ...state,\n        globalError: action.error\n      }\n    default: \n      return state;\n  }\n}\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\n\nexport default store;\n\n","import React from 'react'; \nimport \"./Form.scss\"; \n\nconst Form = props => {\n return (\n   <form\n     onSubmit={props.onSubmit}\n     className=\"form-cu\"\n   >\n    {props.children}\n  </form>\n );\n} \n\nexport default Form;\n","export const endpoints = {\n  login: 'http://localhost:5000/login',\n  logout: 'http://localhost:5000/logout',\n  register: 'http://localhost:5000/register',\n  updateUser: 'http://localhost:5000/user',\n  users: 'http://localhost:5000/users',\n  task: 'http://localhost:5000/task'\n};\n","export const getDateNow = () => {\n  let now = new Date();\n  return String(now.getDate()).padStart(2, '0') + '/' + String(now.getMonth() + 1).padStart(2, '0')\n  + '/' + String(now.getFullYear());\n};\n\nconsole.log(getDateNow());\n\n\n","import { endpoints } from '../../config/endpoints.js';\nimport { getDateNow } from '../../lib/date.js';\nimport { ACTIONS } from '../actions.js';\n\nexport const setTasks = (tasks) => {\n  return {\n    type: ACTIONS.SET_TASKS,\n    tasks\n  }\n};\n\nexport const getTasks = () => {\n  return (dispatch) => {\n    fetch(endpoints.task, {\n      method: 'GET',\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(data => {\n        if(data.tasks){\n          dispatch(setTasks(data.tasks));\n        } else {          \n        }\n      }) \n      .catch(err => {        \n      })\n  };\n};\n\nexport const createTask = ({ userId, success, failed }) => {\n  return (dispatch) => {\n    fetch(endpoints.task, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        assignedTo: userId,\n        text: 'Write some here',\n        date: getDateNow()\n      })\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(json => {\n        dispatch(addTask(json.task));\n        if(success) success();\n      })\n      .catch(err => {\n        if(failed) failed();\n      });\n  };\n};\n\nexport const modifyTask = (\n  { taskId, text, assignedTo, success, failed }) => {\n\n  console.log('modifiing task');\n  return (dispatch) => {\n    if( !taskId || (!text && !assignedTo) ) return;\n    let body = {\n      _id: taskId,\n      task: {}\n    };\n    if(assignedTo)\n      body.task.assignedTo = assignedTo;\n    if(text)\n      body.task.text = text;\n\n    fetch(endpoints.task, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n      .then(res => {\n        if(res.ok){\n          if( text )\n            dispatch(editTask(taskId, text));\n          if( assignedTo )\n            dispatch(assignTask( assignedTo, taskId ));\n          if(success) success();\n        } else {\n          if(failed) failed();\n        }\n      })\n      .catch(err => {\n        if(failed) failed();\n      });\n\n  };\n};\n\nexport const removeTask = ({ _id, success, failed }) => {\n  return (dispatch) => {\n    fetch(endpoints.task, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: { \n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: _id\n      })\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        if(data.ok){\n          dispatch(deleteTask(_id));\n          if(success) success();\n        } else if(data.errors) {\n          if(failed) failed();\n        }\n      })\n      .catch(err => {\n        if(failed) failed();\n      })\n  };\n};\n\nexport const addTask = (task) => {\n  return {\n    type: ACTIONS.ADD_TASK,\n    task\n  }\n};\n\nexport const assignTask = (userId, taskId) => {\n  return {\n    type: ACTIONS.ASSIGN_TASK,\n    userId,\n    taskId\n  } \n};\n\nexport const editTask = (taskId, text) => {\n  return {\n    type: ACTIONS.EDIT_TASK,\n    taskId,\n    text\n  }\n};\n\nexport const deleteTask = (taskId) => {\n  return {\n    type: ACTIONS.DELETE_TASK,\n    taskId\n  }\n};\n\n\n\n\n\n","import { endpoints } from '../../config/endpoints.js';\nimport { ACTIONS } from '../actions.js';\nimport { getTasks } from './task.js';\n\nexport const setUser = (user) => {\n  return {\n    type: ACTIONS.SET_USER,\n    user\n  }\n};\n\nexport const setUsers = (users) => {\n  return {\n    type: ACTIONS.SET_USERS,\n    users\n  }\n};\n\nexport const setLoginErrors = (errors) => {\n  return {\n    type: ACTIONS.SET_LOGIN_ERRORS,\n    errors\n  }\n};\n\nexport const setRegisterErrors = (errors) => {\n  return {\n    type: ACTIONS.SET_REGISTER_ERRORS,\n    errors\n  }\n};\n\nexport const login = ({email, password}) => {\n  console.log('Login with:' , email, password);\n  return function(dispatch) {\n    return fetch(endpoints.login, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email, password\n      }),\n      credentials: 'include'\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(data => {\n        if(!data.errors){\n          dispatch(setUser(data.user));\n          dispatch(getUsers());\n          dispatch(getTasks());\n        } else {\n          dispatch(setLoginErrors(data.errors));\n        }\n      })\n      .catch(err => {\n        dispatch(setLoginErrors(err));\n      });\n  }  \n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    return fetch(endpoints.logout, {\n      method: 'POST'\n    })\n      .then(res => {\n        dispatch(setUser(null));\n      })\n  }\n};\n\nexport const register = ({name, email, password}) => {\n  return (dispatch) => {\n    fetch(endpoints.register, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name, email, password\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if(!data.errors){\n          dispatch(setUser(data.user));\n          dispatch(getUsers());\n          dispatch(getTasks());\n        } else {\n          dispatch(setRegisterErrors(data.errors));\n        }\n      })\n      .catch(err => {\n        dispatch(setRegisterErrors(err));\n      });\n  }\n};\n\nexport const updateUser = ({ _id, name, password, success, failed }) => {\n  return (dispatch, getState) => {\n    if(!_id || (!name && !password)) return Promise.resolve();\n    let user = {};\n    if(name && getState().user.name !== name){\n      user.name = name;\n    }\n    if(password && getState().user.password !== password){\n      user.password = password;\n    }\n    fetch(endpoints.updateUser, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        _id: _id,\n        user: user\n      })\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(res => {\n          dispatch(setUser({...getState().user, ...user }));\n          if(success) success();\n      })\n      .catch(err => {\n        if(failed) failed();\n      });\n  };\n};\n\nexport const getUsers = () => {\n  console.log(\"getting users\", endpoints.users);\n  return (dispatch) => {\n    fetch(endpoints.users, { \n      method: 'GET',\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(res => {\n        console.log('response getting users', res);\n        if(res.errors) {\n        } else {\n          dispatch(setUsers(res.users));\n        }\n      })\n      .catch(err => {\n      })\n  };\n};\n\n\n","\n\nexport const isEmail = (email) => {\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email);\n};\n\nexport const isEmpty = (value) => {\n  return value.length === 0;\n}\n","import { useState } from 'react';\n\nconst getFieldValue = ({ target }) => {\n    if(!target) return null;\n    if(target.type === 'checkbox')\n        return target.checked;\n    return target.value;\n}\n\nconst useForm = (initialValues = {}, validateFunc) => {\n  const [fields, setFields] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const cleanError = (name) => setErrors({...errors, [name]: null});\n  const addError = (name, error) => setErrors({...errors, [name]: error});\n\n \n  const handleChange = (e) => {\n    let { name, value } = e.target;\n    if(validateFunc)\n      execValidateFunc(name, value);\n    \n    setFields({\n        ...fields,\n      [name]: getFieldValue(e)\n    })\n  };\n\n  const execValidateFunc = (name, value) => {\n      let valid = validateFunc(name, value);\n      if(valid.error){\n            addError(name, valid.error);\n            return false;\n      } else if(valid.validator) {\n         if(valid.validator(fields)){\n            cleanError(name);\n            return true;\n         } else {\n            addError(name, valid.message);\n            return false;\n         }\n      } else {\n        cleanError(name);\n        return true;\n      }\n  }   \n\n  const getInput = (name, validate) => {\n    return {\n      name,\n      value: fields[name],\n      onChange: handleChange\n    }\n  };\n  \n  const getCheckbox = (name) => {\n    return {\n        name,\n        checked: fields[name],       \n        onChange: handleChange\n    }\n  };\n\n  const validate = () => {\n    if(!validateFunc) return true;\n    \n    let keys = Object.keys(fields);\n    for(let i = 0; i < keys.length; i+=1)\n      if(!execValidateFunc(keys[i], fields[keys[i]]))\n        return false;\n    return true;\n  };\n\n  return {\n    getInput,\n    getCheckbox,\n    errors,\n    fields,\n    validate\n  }\n};\n\nexport default useForm;\n","import React, { useState } from 'react'; \nimport { Container, Row, Col, Input, Label, FormGroup, FormText } from 'reactstrap';\nimport { BsListCheck } from 'react-icons/bs';\nimport Form from '../../components/Form/Form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../store/actions/user.js';\nimport { isEmail, isEmpty } from '../../lib/validate.js';\nimport useForm from '../../hooks/useForm';\nimport \"./Login.scss\"; \nimport { Link } from 'react-router-dom';\n\n\nconst itemEmail = 'todolistapp-email';\nconst itemRememberMe = 'todolistapp-rememberme';\nconst initialValues = {\n   email: localStorage.getItem(itemEmail) ? \n    localStorage.getItem(itemEmail) : '',\n   password: '' \n};\n\nconst validatePassword = (pass) => {\n  if(isEmpty(pass))\n    return { error: \"Password is required\" };\n  return true;\n}\n\nconst validateEmail = (email) => {\n    if(isEmpty(email)) \n        return { error: \"This field is required\" };\n    else if(!isEmail(email))\n        return { error: \"Invalid email address\" };\n    return true;\n}\n\nconst validate = (name, value) => {\n    switch(name){\n      case 'email':\n        return validateEmail(value);\n      case 'password':\n        return validatePassword(value);\n      default:\n        return true;\n    }\n}\n\n\nconst Login = props => {\n    \n  const dispatch = useDispatch();\n  const appName = useSelector(state => state.appName);\n  const loginErrors = useSelector(state => state.loginErrors);\n  const form = useForm(initialValues, validate);\n  const [remember, setRemember] = useState(\n    localStorage.getItem(itemRememberMe) === 'true' ? true : false);\n\n  const toggleRemember = (e) => {\n    let { checked } = e.target;\n    if(checked){\n      setRemember(true);\n      localStorage.setItem(itemRememberMe, true);\n      localStorage.setItem(itemEmail, form.fields.email);\n    } else {\n      setRemember(false);\n      localStorage.setItem(itemRememberMe, false);\n      localStorage.removeItem(itemEmail);\n    }\n  };\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      if(form.validate()){\n        console.log(form.fields);\n        dispatch(login({\n          email: form.fields.email,\n          password: form.fields.password\n        }));\n      }\n  };\n\n return (\n   <Container className=\"login-screen\">\n    <Row>\n      <Col xs={12} md={{size: 4, offset: 4}}>\n        <Form onSubmit={handleSubmit}>\n          <header>\n            <BsListCheck/>\n            <h2>{appName}</h2>\n          </header>\n          <FormGroup>\n            <Label htmlFor=\"email\">Email</Label>\n            <Input \n              type=\"email\"\n              {...form.getInput('email')}/>\n              {\n                (form.errors.email || loginErrors.email) &&\n                <FormText>{form.errors.email || loginErrors.email}</FormText>\n              }\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"password\">Password</Label>\n            <Input \n              type=\"password\"\n              {...form.getInput('password')}\n            />\n              {\n                (form.errors.password || loginErrors.password) &&\n                <FormText>{form.errors.password || loginErrors.password}</FormText>\n              }\n          </FormGroup>\n          <FormGroup>\n            <Input \n              type=\"checkbox\"\n              onChange={toggleRemember}\n              checked={remember}\n            />\n            <Label htmlFor=\"rememberMe\">Remember me</Label>\n          </FormGroup>\n          <FormGroup>\n            <button type=\"submit\">Login</button>\n          </FormGroup>\n          <FormGroup>\n            <Link to=\"/register\">Or sign in here</Link>\n          </FormGroup>\n        </Form>\n      </Col>\n    </Row>\n   </Container>\n );\n} \n\nexport default Login;\n","import { useState, useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { modifyTask, removeTask } from '../store/actions/task.js';\nimport { useToasts } from 'react-toast-notifications';\n\nconst useTask = (task) => {\n   const dispatch = useDispatch();\n   const [text, setText] = useState('');\n   const [dropdownOpen, setOpen] = useState(false);\n   const [editable, setEditable] = useState(false);\n   const [deleting, setDeleting] = useState(false);\n   const toggleDropdown = () => setOpen(!dropdownOpen);\n   const toggleDeleting = () => setDeleting(!deleting);\n   const textareaRef = useRef(null);\n   const { addToast } = useToasts();\n   const showConnectionError = () => addToast(\n     'Network error, please verify your internet connection',\n     { appearance: 'error' });\n\n   useEffect(() => {\n    if(editable &&  textareaRef && textareaRef.current)\n     textareaRef.current.focus();\n   }, [editable]);\n\n   const assignTo = (userId) => {\n     dispatch(modifyTask({\n       assignedTo: userId,\n       taskId: task._id,\n       success: () => addToast('Task updated', {\n         appearance: 'success', autoDismiss: true\n       }),\n       failed: showConnectionError\n     }));\n   };\n   \n   const edit = () => {\n     setEditable(true);\n   }\n\n   const save = () => {\n     setEditable(false);\n     dispatch(modifyTask({\n       taskId: task._id,\n       text: text,\n       success: () => addToast('Task saved', {\n         appearance: 'success', autoDismiss: true \n       }),\n       failed: showConnectionError\n     }));\n   };\n\n   const deleteFunc = () => {\n     dispatch(removeTask({\n       _id: task._id,\n       success: () => addToast('Task deleted', {\n        appearance: 'success', autoDismiss: true\n       }),\n       failed: showConnectionError\n     }));\n     toggleDeleting();\n   };\n  \n   return {\n     text,\n     setText,\n     editable,\n     edit,\n     save,\n     dropdownOpen,\n     toggleDropdown,\n     assignTo,\n     deleting,\n     toggleDeleting,\n     deleteFunc,\n     textareaRef \n   }\n};\n\nexport default useTask;\n","import React from 'react'; \nimport \"./Alert.scss\"; \nimport PropTypes from 'prop-types';\nimport { MdClose } from 'react-icons/md';\n\nconst Alert = props => {\n if(!props.show) return null;\n return (\n  <main className=\"alert-cu\">\n    <div className=\"body\">\n      <div className=\"close\">\n        <button onClick={props.onCancel}>\n          <MdClose/>\n        </button>\n      </div>\n      <div className=\"message\">\n        <p>{props.message}</p>\n      </div>\n      <div className=\"controls\">\n        <button className=\"onCancel\" onClick={props.onCancel}>Cancel</button>\n        <button className=\"onAccept\" onClick={props.onAccept}>Yes</button>\n      </div>\n    </div>\n  </main>\n );\n} \n\nAlert.propTypes = {\n  message: PropTypes.string.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onAccept: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired\n}\n\nexport default Alert;\n","import React, { useEffect } from 'react'; \nimport { Container, Row, Col } from 'reactstrap';\nimport PropTypes  from 'prop-types';\nimport \"./Task.scss\"; \nimport { FiEdit } from 'react-icons/fi';\nimport { MdDelete, MdAssignmentInd, MdSave } from 'react-icons/md';\nimport { useSelector } from 'react-redux';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport useTask from '../../hooks/useTask.js';\nimport Alert from '../../components/Alert/Alert';\n\nconst Task = props => {\n const users = useSelector(state => state.users);\n const task = useTask(props.task);\n \n useEffect(() => {\n  task.setText(props.task.text);\n }, [props.task.text, task.setText]);\n\n return (\n  <Container className=\"task\">\n    <Row>\n      <Col xs={4} className=\"option assign\">\n        <ButtonDropdown isOpen={task.dropdownOpen} toggle={task.toggleDropdown}>\n          <DropdownToggle caret>\n            <MdAssignmentInd/>\n          </DropdownToggle>\n          <DropdownMenu>\n            { users.map(u => (\n              <div key={u._id || u.id}>\n                <DropdownItem \n                  className={u._id === props.task.assignedTo ? 'selected' : ''}\n                  onClick={() => task.assignTo(u._id)}>{u.name}</DropdownItem>\n                <DropdownItem divider />\n              </div>\n            ))}\n          </DropdownMenu>\n         </ButtonDropdown>\n      </Col>\n      <Col xs={4} className=\"option edit\">\n        { task.editable &&\n        <button onClick={task.save}>\n          <MdSave/>\n        </button>\n        }\n        {\n          !task.editable &&\n           <button onClick={task.edit}>\n              <FiEdit/>\n            </button>\n        }\n      </Col>\n      <Col xs={4} className=\"option delete\">\n        <button onClick={task.toggleDeleting}>\n          <MdDelete/>\n        </button>        \n      </Col>\n    </Row>\n    <Row>\n      <Col \n        xs={12} \n        className=\"content\" \n        onClick={() => task.edit()}\n        onBlur={() => task.save()}>\n        { !task.editable &&\n        <p>\n          {props.task.text}\n        </p>\n        }\n        {\n          task.editable &&\n            <textarea\n              ref={task.textareaRef}\n              name=\"task\"\n              value={task.text}\n              onChange={(e) => task.setText(e.target.value)}\n          />}\n      </Col>\n    </Row>\n    <Alert \n      show={task.deleting} \n      onCancel={task.toggleDeleting}\n      onAccept={task.deleteFunc}\n      message=\"Are you sure want delete this task?\"/>\n   </Container>\n );\n} \n\nTask.propTypes = {\n  task: PropTypes.object.isRequired,\n}\n\nexport default Task;\n","import React, { useEffect, useState } from 'react'; \nimport \"./Home.scss\"; \nimport Task from '../../components/Task/Task';\nimport { useSelector } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Home = props => {\n\n const allTasks = useSelector(state => state.tasks);\n const mainContent = useSelector(state => state.mainContent);\n const user = useSelector(state => state.user);\n const [tasks, setTasks] = useState([]); \n\n useEffect(() => {\n   if(mainContent === 'assignments'){\n    setTasks(\n      allTasks.filter(t => t.assignedTo === user._id)\n    );\n   } else {\n     setTasks(allTasks);\n   }\n },[mainContent, allTasks]);\n\n \n return (\n  <Container fluid>\n      <Row>\n    {\n    tasks.map(t => (\n      <Col xs={6} md={3} key={t._id || t.id}>\n        <Task task={t}/>\n      </Col>\n      ))\n    }\n      </Row>\n   </Container>\n  \n );\n} \n\nexport default Home;\n","import React from 'react'; \nimport \"./Register.scss\"; \nimport { Container, Row, Col, Input, Label, FormText, FormGroup } from 'reactstrap';\nimport Form from '../../components/Form/Form';\nimport { isEmail, isEmpty } from '../../lib/validate.js';\nimport useForm from '../../hooks/useForm.js';\nimport { BsListCheck } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../../store/actions/user.js';\n\nconst initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirm: '' \n};\n\nconst validate = (name, value) => {\n    switch(name){\n        case 'name':\n            if(isEmpty(value))\n                return { error: 'Name is required' };\n            break;\n        case 'email':\n            if(isEmpty(value))\n                return { error: 'Email is required' };\n            else if(!isEmail(value))\n                return { error: 'Invalid email address' };\n            break;\n        case 'password':\n            if(isEmpty(value))\n                return { error: 'Password is required' };\n\n            break;\n        case 'passwordConfirm':\n            if(isEmpty(value))\n              return { error: 'This field is required' }\n            else \n              return {\n                validator: (fields) => value === fields['password'],\n                message: 'Password must match' \n              }\n        default:\n    }\n    return true;\n}\n\nconst Register = props => {\n\n const form = useForm(initialValues, validate);\n const registerErrors = useSelector(state => state.registerErrors);\n const dispatch = useDispatch();\n\n const handleSubmit = (e) => {\n   e.preventDefault();\n   if(form.validate()){\n      console.log(\"Submit register data\", form.fields);\n      dispatch(register({ \n        name: form.fields.name,\n        email: form.fields.email,\n        password: form.fields.password\n      }));\n   }\n };\n\n return (\n  <Container className=\"register-screen\">\n    <Row>\n      <Col xs={12} md={{size: 4, offset: 4}}>\n        <Form onSubmit={handleSubmit}>\n          <header>\n            <BsListCheck/>\n            <h3>Sign in</h3>\n          </header>\n          <FormGroup>\n            <Label htmlFor=\"name\">Name</Label>\n            <Input type=\"text\" {...form.getInput('name')}/>\n            { \n              ( form.errors.name || registerErrors.name ) &&\n              <FormText>{form.errors.name || registerErrors.name}</FormText>\n            }\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"email\">Email</Label>\n            <Input type=\"email\" {...form.getInput('email')}/>\n            { \n              ( form.errors.email || registerErrors.email ) &&\n              <FormText>{form.errors.email || registerErrors.email}</FormText>\n            }\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"password\">Password</Label>\n            <Input type=\"password\" {...form.getInput('password')}/>\n            { \n              ( form.errors.password || registerErrors.password ) &&\n              <FormText>{form.errors.password}</FormText>\n            }\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"passwordConfirm\">Password confirm</Label>\n            <Input type=\"password\" {...form.getInput('passwordConfirm')}/>\n            {\n              form.errors.passwordConfirm &&\n                <FormText>{form.errors.passwordConfirm}</FormText>\n            }\n          </FormGroup>\n          <FormGroup>\n            <button type=\"submit\">Sign in</button>\n          </FormGroup>\n          <FormGroup>\n            <Link to=\"/\" >Or login here</Link>\n          </FormGroup>\n        </Form>        \n      </Col>\n    </Row>\n   </Container>  \n );\n} \n\nexport default Register;\n","import React, { useEffect, useState } from 'react'; \nimport \"./Profile.scss\"; \nimport { Container, Row, Col, Input, Label, FormText, FormGroup } from 'reactstrap';\nimport Form from '../../components/Form/Form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useForm from '../../hooks/useForm.js';\nimport { updateUser } from '../../store/actions/user.js';\nimport { useToasts } from 'react-toast-notifications';\n\n\nconst Profile = props => {\n \n const user = useSelector(state => state.user);\n const modifyUserErrors = useSelector(state => state.modifyUserErrors);\n const [disabled, setDisabled] = useState(true);\n const dispatch = useDispatch();\n const { addToast } = useToasts();\n\n const form = useForm({\n    name: user.name, \n    password: ''\n });\n\n const modifyUser = (e) => {\n   e.preventDefault();\n   dispatch(updateUser({\n     _id: user._id,\n     name: form.fields.name,\n     password: form.fields.password,\n     success:  () => addToast('User updated correctly', {\n       appearance: 'success',\n       autoDismiss: true\n     }),\n     failed: () => addToast('Network error please verify your connection', \n       { appearance: 'error' })\n   }));\n };\n\n useEffect(() => {\n  if(form.fields.name !== user.name || \n    form.fields.password.length > 0) {\n    setDisabled(false);\n  } else {\n    setDisabled(true);\n  }\n }, [form.fields.name, form.fields.password]);\n\n return (\n  <Container className=\"pt-5 profile\">\n    <Row className=\"px-3 mb-5\">\n      <Col xs={4} md={{size: 1, offset: 4}} className=\"user-photo\">\n        <img src={user.photo || \"/user.png\"} alt=\"Profile\" className=\"img-fluid\" />\n      </Col>\n      <Col xs={8} md={{size: 3}} className=\"d-flex align-items-center username\">\n        <b className=\"m-0 p-0\">{user.email}</b>\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12} md={{size: 4, offset: 4}}>\n        <Form onSubmit={modifyUser}>\n          <FormGroup>\n            <Label htmlFor=\"name\">Username</Label>\n            <Input\n              type=\"text\"\n              {...form.getInput('name')}/>\n              {\n              ( form.errors.name || modifyUserErrors.name ) &&\n              <FormText>\n                {form.errors.name || modifyUserErrors.name}\n              </FormText>\n              }\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"password\">Password</Label>\n            <Input\n              type=\"password\"\n              {...form.getInput('password')}/>\n              {\n              ( form.errors.password || modifyUserErrors.password ) &&\n              <FormText>\n                {form.errors.password || modifyUserErrors.password}\n              </FormText>\n              }\n          </FormGroup>\n          <FormGroup className=\"mt-5\">\n            <button type=\"submit\" disabled={disabled}>Save</button>\n          </FormGroup>\n        </Form>\n      </Col>\n    </Row>\n   </Container>  \n );\n} \n\nexport default Profile;\n","import React, { useState } from 'react'; \nimport \"./UserInfo.scss\"; \nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../store/actions/user.js';\n\nconst UserInfo = props => {\n  const user = useSelector(state => state.user);\n  const [open, setOpen] = useState(false);\n  const toggle = () => setOpen(!open);\n  const dispatch = useDispatch();\n\n return (\n  <div className=\"user-info\">\n    <button onClick={toggle}>\n       <img className=\"img-fluid\" src={user.photo || \"/user.png\"} alt={user.name} />\n    </button>\n    <div className={\"menu\" + (open ? ' d-block' : ' d-none')}>\n      <ul>\n        <li>\n          <Link to=\"/profile\">Profile</Link>\n        </li>\n        <li>\n          <button onClick={ () => dispatch(logout())}>\n            Logout\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n );\n} \n\nexport default UserInfo;\n","import React from 'react';\nimport { FaTasks } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfo from '../UserInfo/UserInfo';\nimport { GrAdd } from 'react-icons/gr';\nimport \"./Navbar.scss\";\nimport { setMainContent } from '../../store/actions.js';\nimport { createTask } from '../../store/actions/task.js';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\n\nconst Navbar = props => {\n  \n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const location = useLocation();\n  const history = useHistory();\n  const { addToast } = useToasts();\n\n  const showAll = () => dispatch( setMainContent( 'all' ) );\n  const showAssignments = () => dispatch( setMainContent( 'assignments' ) );\n  const newTask = () => dispatch( createTask({\n    userId: user._id || user.id,\n    success: () => addToast('Task created', { \n      appearance: 'success', autoDismiss: true\n    }),\n    failed: () => addToast('Network error, please verify your connection', {\n      appearance: 'error'\n    })\n  }));\n\n  const verifyLocation = (path, callback) => {\n    if(location.pathname !== path){\n      history.push(path);\n    } \n    callback();\n  };\n\n if(!user) return null;\n return (\n  <nav className=\"navbar\">\n    <ul>\n      <li>\n        <button onClick={() => verifyLocation('/home', showAll)}>\n          <span>All</span>\n        </button>\n      </li>\n      <li>\n        <button onClick={() => verifyLocation('/home', showAssignments)}>\n          <span>\n            Assignments\n          </span>\n          <FaTasks/>\n        </button>\n      </li>\n      <li>\n        <button onClick={() => verifyLocation('/home', newTask)}>\n          <span>\n            New\n          </span>\n          <GrAdd/>\n        </button>\n      </li>\n    </ul>\n    <UserInfo/>\n  </nav>\n );\n} \n\nexport default Navbar;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n\nfunction PublicRoute({ children , ...rest}) {\n\n  const user = useSelector(state => state.user);\n  \n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user ? (\n          <Redirect \n            to=\"/home\"\n          />\n        )  : (\n          children                      \n        )\n      }\n    />\n  );\n}\n\n\nexport default PublicRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n\nfunction PrivateRoute({ children , ...rest}) {\n\n  const user = useSelector(state => state.user);\n  \n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user ? (\n          children \n        )  : (\n          <Redirect \n            to=\"/\"\n          />\n        )\n      }\n    />\n  );\n}\n\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications';\nimport Login from './screens/Login/Login';\nimport Home from './screens/Home/Home';\nimport Register from './screens/Register/Register';\nimport Profile from './screens/Profile/Profile';\nimport Navbar from './components/Navbar/Navbar';\nimport PublicRoute from './components/PublicRoute';\nimport PrivateRoute from './components/PrivateRoute';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nfunction App() {\n  \n  return (\n    <Router className=\"App\">\n      <ToastProvider>\n       <Navbar />\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <Login />\n          </PublicRoute>\n          <PublicRoute path=\"/register\">\n            <Register />\n          </PublicRoute>\n          <PrivateRoute path=\"/home\">\n            <Home />\n          </PrivateRoute>\n          <PrivateRoute path=\"/profile\">\n            <Profile />\n          </PrivateRoute>\n        </Switch>\n      </ToastProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}